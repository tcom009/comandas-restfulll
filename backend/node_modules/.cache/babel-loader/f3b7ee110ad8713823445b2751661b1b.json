{"ast":null,"code":"var _jsxFileName = \"/home/gersonm/comandas-restfull/backend/src/components/ProtectedView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst storedJwt = localStorage.getItem(\"token\"); //const refreshJwt = localStorage.getItem(\"token-refresh\");\n\nconst AuthAxios = axios.create({\n  headers: {\n    Authorization: `Bearer ${storedJwt}`\n  }\n});\n/*const AuthRefresh = axios.create({\n  headers: {\n    Authorization: `Bearer ${storedJwt}`,\n  },\n});*/\n\nexport default function ProtectedView() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const refreshToken = async () => {\n    await axios({\n      method: \"post\",\n      url: \"api/token-refresh/\",\n      data: {\n        username: username,\n        password: password\n      }\n    }).then(response => {\n      //setData({ ...response });\n      console.log(response);\n      localStorage.setItem(\"token\", response.data.access);\n      localStorage.setItem(\"token-refresh\", response.data.refresh);\n      setIsLogedIn(true);\n      setIsLoading(false);\n      console.log(\"access: \" + localStorage.getItem(\"token\"));\n      console.log(\"refresh: \" + localStorage.getItem(\"token-refresh\"));\n      setLogedUser(username); //setUsername(response.username);\n    }, error => {\n      setIsError(true);\n      setIsLoading(false);\n      setErrorMessage(error.message);\n      console.log(error.message); // setIsError((isError.errorState = true));\n      // setIsError((isError.message = error));\n    });\n  };\n\n  const fecthData = async () => {\n    const data = await AuthAxios(\"/tod/todos/\").then(response => {\n      setData(...response.data);\n      console.log(response.data);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fecthData,\n          className: \"is-button is-warning\",\n          children: \"Obtener data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\xBFLa tarea ha sido completada?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), data.completed ? \"Si\" : \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProtectedView, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n\n_c = ProtectedView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedView\");","map":{"version":3,"sources":["/home/gersonm/comandas-restfull/backend/src/components/ProtectedView.js"],"names":["React","useState","useEffect","axios","storedJwt","localStorage","getItem","AuthAxios","create","headers","Authorization","ProtectedView","data","setData","refreshToken","method","url","username","password","then","response","console","log","setItem","access","refresh","setIsLogedIn","setIsLoading","setLogedUser","error","setIsError","setErrorMessage","message","fecthData","title","description","completed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst storedJwt = localStorage.getItem(\"token\");\n//const refreshJwt = localStorage.getItem(\"token-refresh\");\nconst AuthAxios = axios.create({\n  headers: {\n    Authorization: `Bearer ${storedJwt}`,\n  },\n});\n\n/*const AuthRefresh = axios.create({\n  headers: {\n    Authorization: `Bearer ${storedJwt}`,\n  },\n});*/\n\nexport default function ProtectedView() {\n  const [data, setData] = useState({});\n\n  const refreshToken = async () => {\n    await axios({\n      method: \"post\",\n      url: \"api/token-refresh/\",\n      data: { username: username, password: password },\n    }).then(\n      (response) => {\n        //setData({ ...response });\n        console.log(response);\n        localStorage.setItem(\"token\", response.data.access);\n        localStorage.setItem(\"token-refresh\", response.data.refresh);\n        setIsLogedIn(true);\n        setIsLoading(false);\n        console.log(\"access: \" + localStorage.getItem(\"token\"));\n        console.log(\"refresh: \" + localStorage.getItem(\"token-refresh\"));\n        setLogedUser(username);\n        //setUsername(response.username);\n      },\n      (error) => {\n        setIsError(true);\n        setIsLoading(false);\n        setErrorMessage(error.message);\n        console.log(error.message);\n        // setIsError((isError.errorState = true));\n        // setIsError((isError.message = error));\n      }\n    );\n  };\n\n  const fecthData = async () => {\n    const data = await AuthAxios(\"/tod/todos/\").then(\n      (response) => {\n        setData(...response.data);\n        console.log(response.data);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"columns\">\n        <div className=\"column\">\n          <button onClick={fecthData} className=\"is-button is-warning\">\n            Obtener data\n          </button>\n          <h1>{data.title}</h1>\n          <h1>{data.description}</h1>\n          <h1>\n            Â¿La tarea ha sido completada?\n            <br />\n            {data.completed ? \"Si\" : \"No\"}\n          </h1>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}