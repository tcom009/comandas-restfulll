{"ast":null,"code":"var _jsxFileName = \"/home/gersonm/comandas-restfull/backend/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport LoginPage from \"./pages/LoginPage\";\nimport ProtectedPage from \"./pages/ProtectedPage\";\nimport Home from \"./pages/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst refreshJwt = localStorage.getItem(\"token-refresh\");\naxios.interceptors.response.use(res => {\n  if (res.status === 401) {\n    const refreshToken = async () => {\n      await axios({\n        method: \"post\",\n        url: \"api/token-refresh/\",\n        data: {\n          refresh: refreshJwt\n        }\n      }).then(response => {\n        console.log(response);\n        localStorage.setItem(\"token\", response.data.access);\n        console.log(\"access: \" + localStorage.getItem(\"token\"));\n        console.log(\"refresh: \" + localStorage.getItem(\"token-refresh\"));\n      }, error => {\n        console.log(error.status);\n      });\n    };\n  }\n\n  console.log(res);\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/protected\",\n            component: ProtectedPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: LoginPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gersonm/comandas-restfull/backend/src/App.js"],"names":["React","axios","BrowserRouter","Switch","Route","Layout","LoginPage","ProtectedPage","Home","refreshJwt","localStorage","getItem","interceptors","response","use","res","status","refreshToken","method","url","data","refresh","then","console","log","setItem","access","error","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAnB;AACAV,KAAK,CAACW,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAiCC,GAAD,IAAS;AACvC,MAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,UAAMC,YAAY,GAAG,YAAY;AAC/B,YAAMhB,KAAK,CAAC;AACViB,QAAAA,MAAM,EAAE,MADE;AAEVC,QAAAA,GAAG,EAAE,oBAFK;AAGVC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAEZ;AAAX;AAHI,OAAD,CAAL,CAIHa,IAJG,CAKHT,QAAD,IAAc;AACZU,QAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACAH,QAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BZ,QAAQ,CAACO,IAAT,CAAcM,MAA5C;AAEAH,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAad,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAzB;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAcd,YAAY,CAACC,OAAb,CAAqB,eAArB,CAA1B;AACD,OAXG,EAYHgB,KAAD,IAAW;AACTJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACX,MAAlB;AACD,OAdG,CAAN;AAgBD,KAjBD;AAkBD;;AACDO,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACD,CAtBD;;AAwBA,SAASa,GAAT,GAAe;AACb,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAEpB;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,YAAlB;AAA+B,YAAA,SAAS,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,QAAlB;AAA2B,YAAA,SAAS,EAAED;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;KAdQsB,G;AAgBT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\n\nimport LoginPage from \"./pages/LoginPage\";\nimport ProtectedPage from \"./pages/ProtectedPage\";\nimport Home from \"./pages/Home\";\nconst refreshJwt = localStorage.getItem(\"token-refresh\");\naxios.interceptors.response.use((res) => {\n  if (res.status === 401) {\n    const refreshToken = async () => {\n      await axios({\n        method: \"post\",\n        url: \"api/token-refresh/\",\n        data: { refresh: refreshJwt },\n      }).then(\n        (response) => {\n          console.log(response);\n          localStorage.setItem(\"token\", response.data.access);\n\n          console.log(\"access: \" + localStorage.getItem(\"token\"));\n          console.log(\"refresh: \" + localStorage.getItem(\"token-refresh\"));\n        },\n        (error) => {\n          console.log(error.status);\n        }\n      );\n    };\n  }\n  console.log(res);\n});\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/protected\" component={ProtectedPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}